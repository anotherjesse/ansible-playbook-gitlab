---
# 1. Packages / Dependencies

- hosts: gitlab
  sudo: yes
  tasks:
    - name: ensure app apt dependencies are installed
      action: apt pkg=$item
      with_items:
        - build-essential
        - zlib1g-dev
        - libyaml-dev
        - libssl-dev
        - libgdbm-dev
        - libreadline-dev
        - libncurses5-dev
        - libffi-dev
        - curl
        - git-core
        - openssh-server
        - redis-server
        - postfix
        - checkinstall
        - libxml2-dev
        - libxslt1-dev # The installation document says libxslt-dev, but I guess this is okay
        - libcurl4-openssl-dev
        - libicu-dev

- hosts: gitlab
  sudo: yes
  tasks:
    - name: ensure /usr/local/bin/python2 links to /usr/bin/python
      file: state=link src=/usr/bin/python path=/usr/local/bin/python2

# 2. Ruby

- hosts: gitlab
  sudo: no
  vars:
    url: http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p327.tar.gz
    path: /tmp/ruby/ruby-1.9.3-p327
  tasks:
    - name: ensure directory /tmp/ruby is present
      file: state=directory path=/tmp/ruby
    - name: ensure ruby is downloaded
      get_url: url=$url dest=/tmp/ruby
    - name: ensure ruby is extracted
      command: tar -xf ruby-1.9.3-p327.tar.gz chdir=/tmp/ruby creates=$path
    - name: ensure ruby is configured
      command: ./configure chdir=$path creates=$path/Makefile
    - name: ensure ruby is compiled
      command: make chdir=$path creates=$path/ruby

- hosts: gitlab
  sudo: yes
  vars:
    path: /tmp/ruby/ruby-1.9.3-p327
  tasks:
    - name: ensure ruby is installed
      command: make install chdir=$path creates=/usr/local/bin/ruby
    - name: ensure bundler is installed
      command: gem install bundler creates=/usr/local/lib/ruby/gems/1.9.1/gems/bundler-1.3.0

# 3. System Users

- hosts: gitlab
  sudo: yes
  tasks:
    - name: ensure user git is present
      user: state=present name=git system=yes shell=/bin/sh comment="Git Version Control" # Possible problem is that --disabled-password is not set explicitly – I couldn’t find anything like that.
    - name: ensure user gitlab is present
      user: state=present name=gitlab groups=git comment="GitLab" generate_ssh_key=yes

# 4. Gitolite

- hosts: gitlab
  sudo: yes
  sudo_user: git
  tasks:
    - name: ensure Gitolite git repository is cloned
      git: repo=https://github.com/gitlabhq/gitolite.git dest=/home/git/gitolite version=gl-v320
    - name: ensure /home/git/bin exists
      file: state=directory path=/home/git/bin
      # It’s not ideal to solve this using handlers, but we don’t want that append script to trigger twice – and it’s not possible to check if it has run without doing anything crazy.
      notify:
        - setup Gitolite path
        - setup Gitolite symlink
  handlers:
    - name: setup Gitolite path
      command: sh -c 'printf "%b\n%b\n" "PATH=\$PATH:/home/git/bin" "export PATH" >> /home/git/.profile'
    - name: setup Gitolite symlink # ?
      command: sh -c 'gitolite/install -ln /home/git/bin' chdir=/home/git

- hosts: gitlab
  sudo: yes
  sudo_user: root
  tasks:
    - name: ensure a copy of gitlab’s SSH key exists in git’s home directory
      command: cp /home/gitlab/.ssh/id_rsa.pub /home/git/gitlab.pub creates=/home/git/gitlab.pub
    - name: ensure copy of gitlab’s SSH key has mode 0444
      file: path=/home/git/gitlab.pub mode=0444
    - name: ensure a copy of gitlab’s SSH key exists in git’s authorized keys
      command: cp /home/gitlab/.ssh/id_rsa.pub /home/git/gitlab.pub creates=/home/git/.ssh/authorized_keys

- hosts: gitlab
  sudo: yes
  sudo_user: git
  tasks:
    - name: use gitlab’s SSH key for Gitolite setup
      command: sh -c "PATH=/home/git/bin:$PATH; gitolite setup -pk /home/git/gitlab.pub" creates=/home/git/repositories/gitolite-admin.git

- hosts: gitlab
  sudo: yes
  sudo_user: root
  tasks:
    - name: ensure Gitolite config dir is owned by git:git and has mode 750
      file: state=directory path=/home/git/.gitolite mode=750 owner=git group=git recurse=yes
    - name: fix directory permissions for repositories (1)
      command: sudo chmod -R ug+rwX,o-rwx /home/git/repositories/
    - name: fix directory permissions for repositories (2)
      file: state=directory path=/home/git/repositories owner=git group=git recurse=yes
    - name: fix directory permissions for repositories (3)
      shell: find /home/git/repositories -type d -print0 | sudo xargs -0 chmod g+s


- hosts: gitlab
  sudo: yes
  tasks:
    - name: Add ssh_config for the git user
      action: template src=templates/user_ssh_config dest=/home/git/.ssh/config
    - name: Add ssh_config for the gitlab user
      action: template src=templates/user_ssh_config dest=/home/gitlab/.ssh/config

